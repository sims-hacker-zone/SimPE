<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
	<data name="English_uk" xml:space="preserve">
    <value>English (UK)</value>
  </data>
	<data name="English" xml:space="preserve">
    <value>English)</value>
  </data>
  <data name="neighborhoodbrowser" xml:space="preserve">
    <value>Neighborhood Browser</value>
  </data>
  <data name="backuprestore" xml:space="preserve">
    <value>Would you like to create a copy of the current Neighborhood before you overwrite it with this Backup?</value>
  </data>
  <data name="unsavedchanges" xml:space="preserve">
    <value>Some Files in the Package have unsaved changes which will be lost when you open a new neighborhood. 
		
Do you want to continue anyway?</value>
  </data>
  <data name="OW_Warning" xml:space="preserve">
    <value>In order for this Feature to work on Objects that are not yet Color Enabled, you need to download and install the Color Options Enabler from http://www.modthesims2.com/index.php? .\n\nThis Feature is still in the Beta Testing Stages and might no work correct. Please don't distribute Recolors created with this Tool without mentioning that it is Testing or Beta Release, and don't forget that the Users of the Recolors will also need the Color Options Enabler!\n\nContinue anyway?</value>
  </data>
  <data name="Intrigued Neighborhood" xml:space="preserve">
    <value>Intrigued Neighborhood</value>
  </data>
  <data name="neighborhood" xml:space="preserve">
    <value>Neighborhood</value>
  </data>
  <data name="Neighborhood/Memory" xml:space="preserve">
    <value>Neighborhood/Memory</value>
  </data>
  <data name="SimPe.Data.XObjFunctionSubSort.Hood_Landmark" xml:space="preserve">
    <value>Neighborhood / Landmark</value>
  </data>
  <data name="SimPe.Data.XObjFunctionSubSort.Hood_Flora" xml:space="preserve">
    <value>Neighborhood / Flora</value>
  </data>
  <data name="SimPe.Data.XObjFunctionSubSort.Hood_Effects" xml:space="preserve">
    <value>Neighborhood / Effects</value>
  </data>
  <data name="SimPe.Data.XObjFunctionSubSort.Hood_Misc" xml:space="preserve">
    <value>Neighborhood / Misc</value>
  </data>
  <data name="SimPe.Data.XObjFunctionSubSort.Hood_Stone" xml:space="preserve">
    <value>Neighborhood / Stone</value>
  </data>
  <data name="SimPe.Data.XObjFunctionSubSort.Hood_Other" xml:space="preserve">
    <value>Neighborhood / Other</value>
  </data>
  <data name="cbautobak_CheckedChanged" xml:space="preserve">
    <value>Warning: Do not try to restore live game data such as sims, lots or neighborhoods from .bak files.</value>
  </data>
	<data name="NotSet" xml:space="preserve">
<value>Not Set</value>
</data>
	<data name="size10cm" xml:space="preserve">
<value>Length 4 inches</value>
</data>
	<data name="size12cm" xml:space="preserve">
<value>Length 5 inches</value>
</data>
	<data name="size15cm" xml:space="preserve">
<value>Length 6 inches</value>
</data>
	<data name="size18cm" xml:space="preserve">
<value>Length 7 inches</value>
</data>
	<data name="size20cm" xml:space="preserve">
<value>Length 8 inches</value>
</data>
	<data name="size23cm" xml:space="preserve">
<value>Length 9 inches</value>
</data>
	<data name="size26cm" xml:space="preserve">
<value>Length 10 inches</value>
</data>
</root>